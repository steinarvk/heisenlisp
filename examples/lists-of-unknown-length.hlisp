(set! normal-list (cons 1 (cons 2 (cons 3 nil))))
(set! list-with-unknown (cons 1 (cons unknown (cons 3 nil))))
(set! cons-structure-with-unknown-tail (cons 1 (cons 2 (cons 3 unknown))))
(set! one-of-two-lists (cons 1 (cons 2 (cons 3 (any-of (cons 4 nil) nil)))))

(_assert! "3" (length normal-list))
(_assert! "3" (length list-with-unknown))

(_assert! "#any-of(4 3)" (length one-of-two-lists))

(_assert! "true" (list? normal-list))
(_assert! "true" (list? list-with-unknown))
(_assert! "true" (list? one-of-two-lists))
(_assert! "maybe" (list? cons-structure-with-unknown-tail))

(defun! is-equal-to (n) (lambda (x) (= x n)))

(_assert! "true" (any? (is-equal-to 2) normal-list))
(_assert! "false" (any? (is-equal-to 4) normal-list))

(_assert! "maybe" (any? (is-equal-to 2) list-with-unknown))
(_assert! "true" (any? (is-equal-to 3) list-with-unknown))

(_assert! "true" (any? (is-equal-to 2) one-of-two-lists))
(_assert! "maybe" (any? (is-equal-to 4) one-of-two-lists))
(_assert! "false" (any? (is-equal-to 5) one-of-two-lists))
